AWSTemplateFormatVersion: '2010-09-09'
Description: 'Amazon Elasticsearch Service with Amazon Cognito'

Metadata:
  AWS::ServerlessRepo::Application:
    Name: amazon-elasticsearch-cognito-auth
    Description: >
      Amazon Elasticsearch Service with Amazon Cognito
    Author: Kazuki Matsuda
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels: ['elasticsearch', 'cognito']
    HomepageUrl: https://github.com/mats16/amazon-elasticsearch-cognito-auth/tree/master/cognito
    SemanticVersion: 0.1.0
    SourceCodeUrl: https://github.com/mats16/amazon-elasticsearch-cognito-auth/tree/master/cognito
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Elasticsearch Configuration
        Parameters:
          - ElasticsearchVersion
          - ElasticsearchAvailabilityZoneCount
          - ElasticsearchInstanceType
          - ElasticsearchInstanceCount
          - ElasticsearchMasterType
          - ElasticsearchMasterCount
      - Label:
          default: Cognito Configuration
        Parameters:
          - CognitoUserPoolDomain
          - CognitoAllowedEmailDomains

Globals:
  Function:
    Timeout: 5

Parameters:
  ElasticsearchVersion:
    Type: String
    Default: 7.1
    AllowedValues:
      - 7.1
      - 6.8
  ElasticsearchAvailabilityZoneCount:
    Type: Number
    Default: 2
    AllowedValues:
      - 1
      - 2
      - 3
  ElasticsearchInstanceType:
    Type: String
    Default: i3.large.elasticsearch
    AllowedValues:
      - i3.large.elasticsearch
      - i3.xlarge.elasticsearch
      - i3.2xlarge.elasticsearch
      - i3.4xlarge.elasticsearch
      - i3.8xlarge.elasticsearch
      - i3.16xlarge.elasticsearch
  ElasticsearchInstanceCount:
    Type: Number
    Default: 2
  ElasticsearchMasterType:
    Type: String
    Default: t2.medium.elasticsearch
    AllowedValues:
      - t2.small.elasticsearch
      - t2.medium.elasticsearch
      - m5.large.elasticsearch
      - m5.xlarge.elasticsearch
      - m5.2xlarge.elasticsearch
      - m5.4xlarge.elasticsearch
      - m5.12xlarge.elasticsearch
      - r5.large.elasticsearch
      - r5.xlarge.elasticsearch
      - r5.2xlarge.elasticsearch
      - r5.4xlarge.elasticsearch
      - r5.12xlarge.elasticsearch
  ElasticsearchMasterCount:
    Type: Number
    Default: 3
  CognitoUserPoolDomain:
    Description: Domain prefix for the sign-in page hosted by Amazon Cognito
    Type: String
    AllowedPattern: ^[a-z0-9\-]*$
    MaxLength: 63
    MinLength: 1
  CognitoAllowedEmailDomains:
    Type: CommaDelimitedList
    Description: Specific domains allowed to register on Cognito
    Default: amazon.com,amazon.co.jp

Transform: "AWS::Serverless-2016-10-31"
Resources:

  Elasticsearch:
    Type: AWS::Elasticsearch::Domain
    DependsOn: UserPoolDomain
    DeletionPolicy: Retain
    Properties:
      ElasticsearchVersion: !Ref ElasticsearchVersion
      ElasticsearchClusterConfig:
        ZoneAwarenessEnabled: true
        ZoneAwarenessConfig:
           AvailabilityZoneCount: !Ref ElasticsearchAvailabilityZoneCount
        InstanceType: !Ref ElasticsearchInstanceType
        InstanceCount: !Ref ElasticsearchInstanceCount
        DedicatedMasterEnabled: true
        DedicatedMasterType: !Ref ElasticsearchMasterType
        DedicatedMasterCount: !Ref ElasticsearchMasterCount
      CognitoOptions:
        Enabled: true
        UserPoolId: !Ref KibanaUserPool
        IdentityPoolId: !Ref KibanaIdentityPool
        RoleArn: !GetAtt CognitoAccessForAmazonES.Arn
      #DomainEndpointOptions:  # Not supported yet
      #  EnforceHTTPS: true
      AdvancedOptions:
        rest.action.multi.allow_explicit_index: true
      AccessPolicies: !Sub |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  "${AWS::AccountId}"
                ]
              },
              "Action": [
                "es:*"
              ],
              "Resource": "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/*/*"
            }
          ]
        }

  CognitoAccessForAmazonES:
    Type: AWS::IAM::Role
    Properties:
      Description: 'Amazon Elasticsearch role for Kibana authentication.'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: es.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonESCognitoAccess
      Path: /service-role/

  PreSignUp:
    Type: AWS::Serverless::Function
    Properties:
      Description: 'Validate e-mail domain just before sign-up'
      CodeUri: cognito-pre-sign-up/
      Handler: index.lambda_handler
      Runtime: python3.6
      Environment:
        Variables:
          ALLOWED_DOMAINS: !Join [',', !Ref CognitoAllowedEmailDomains] 

  PreSignUpInvocationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt PreSignUp.Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn: !GetAtt KibanaUserPool.Arn

  KibanaUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      Schema:
        - Name: email
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: true
      LambdaConfig:
        PreSignUp: !GetAtt PreSignUp.Arn

  KibanaIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: true
      # CognitoIdentityProviders:
      #   - ClientId: !Ref UserPoolClient
      #     ProviderName: !Sub "cognito-idp.${AWS::Region}.amazonaws.com/${UserPool}"

  KibanaIdentityRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "sts:AssumeRoleWithWebIdentity"
            Principal:
              Federated: cognito-identity.amazonaws.com
            Condition:
              StringEquals:
                "cognito-identity.amazonaws.com:aud": !Ref KibanaIdentityPool
              ForAnyValue:StringLike:
                "cognito-identity.amazonaws.com:amr": authenticated
      Policies:
        - PolicyName: AuthenticatedPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "es:ESHttp*"
                Resource:
                  - "*"

  RoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: !Ref KibanaIdentityPool
      Roles:
        authenticated: !GetAtt KibanaIdentityRole.Arn

  UserPoolDomain:
    Type: Custom::UserPoolDomain
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt ModifyUserPoolDomain.Arn
      Domain: !Ref CognitoUserPoolDomain
      UserPoolId: !Ref KibanaUserPool

  ModifyUserPoolDomain:
    Type: AWS::Serverless::Function
    Properties:
      Description: '[CFn Custom Resource] modify a domain prefix for the sign-in page hosted by Amazon Cognito'
      CodeUri: custom_resources/userpool_domain/
      Handler: index.lambda_handler
      Runtime: python3.6
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "cognito-idp:CreateUserPoolDomain"
                - "cognito-idp:DeleteUserPoolDomain"
              Resource:
                - !GetAtt KibanaUserPool.Arn

  ModifyTemplate:
    Type: AWS::Serverless::Function
    Properties:
      Description: '[CFn Custom Resource] modify a mapping template of Amazon Elasticsearch Service'
      CodeUri: custom_resources/elasticsearch_template/
      Handler: index.lambda_handler
      Runtime: python3.6
      Environment:
        Variables:
          ES_HOST: !GetAtt Elasticsearch.DomainEndpoint
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - es:ESHttpPut
                - es:ESHttpDelete
              Resource:
                - !Sub '${Elasticsearch.Arn}/_template/*'

Outputs:

  Arn:
    Value: !GetAtt Elasticsearch.Arn

  Endpoint:
    Value: !GetAtt Elasticsearch.DomainEndpoint

  ModifyTemplateArn:
    Value: !GetAtt ModifyTemplate.Arn
